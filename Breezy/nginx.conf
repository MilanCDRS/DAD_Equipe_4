events {
  worker_connections 1024;
}

http {
  upstream frontend {
    server frontend:3000;
  }

  # 1) Redirection HTTP → HTTPS
  server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
  }

  # 2) HTTPS + proxy
  server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate     /etc/nginx/certs/localhost+2.pem;
    ssl_certificate_key /etc/nginx/certs/localhost+2-key.pem;

    # API Auth (login / register / users)
    location /api/auth/ {
      proxy_pass       http://auth:3000/api/auth/;
      proxy_set_header Host            $host;
      proxy_set_header X-Real-IP       $remote_addr;
      proxy_set_header Cookie $http_cookie;
    }

    # API Users (profil, mise à jour, etc.)
    location /api/users/ {
      proxy_pass       http://auth:3000/api/users/;
      proxy_set_header Host            $host;
      proxy_set_header X-Real-IP       $remote_addr;
      proxy_set_header Cookie $http_cookie;
    }

    # API Posts (public)
    location /api/posts {
      # Passe tout /api/posts* au service public
      proxy_pass       http://public:3000;
      proxy_set_header Host            $host;
      proxy_set_header X-Real-IP       $remote_addr;
      proxy_set_header Cookie $http_cookie;
    }

    # API Followers (public)
    location /api/follower {
      proxy_pass       http://public:3000;
      proxy_set_header Host            $host;
      proxy_set_header X-Real-IP       $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # API Private (protégé)
    location /api/private/ {
      auth_request /authenticate;
      proxy_pass   http://private:3000/;
      proxy_set_header Host            $host;
      proxy_set_header X-Real-IP       $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # endpoint interne d’auth pour auth_request
    location = /authenticate {
      internal;
      proxy_pass               http://auth:3000/api/auth/authenticate;
      proxy_pass_request_body  off;
      proxy_set_header         Content-Length "";
      proxy_set_header         Authorization $http_authorization;
    }

    # Tout le reste → frontend Next.js
    location / {
      proxy_pass       http://frontend;
      proxy_set_header Host            $host;
      proxy_set_header X-Real-IP       $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}
